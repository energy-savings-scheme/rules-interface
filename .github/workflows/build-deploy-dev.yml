name: Build and Deploy to DEV

on:
  workflow_dispatch:
  push:
    branches:
      - feature/DG22-2386-hookup-RF2-conditional-questions

env:
  REACT_APP_OPENFISCA_BASE_URL: '${{ secrets.REACT_APP_OPENFISCA_BASE_URL_DEV }}'
  REACT_APP_API_BASE_URL: '${{ secrets.REACT_APP_API_BASE_URL_DEV }}'
  REACT_APP_REGISTRY_API_BASE_URL: '${{ secrets.REACT_APP_REGISTRY_API_BASE_URL_DEV }}'

jobs:
  build-and-deploy:
    name: Build and deploy
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 14.x

      - name: Install Yarn
        run: npm install -g yarn

      - name: Install tools
        run: |
          curl -L https://aka.ms/downloadazcopy-v10-linux | tar -xz
          sudo cp ./azcopy_linux_amd64*/azcopy /usr/local/bin/

      - name: Build website
        run: |
          # Install all npm packages
          yarn install

          export REACT_APP_BUILD_VERSION=$(date +'%Y%m%d-%H%M%S')

          # Create .env file
          touch ./.env
          echo "REACT_APP_OPENFISCA_BASE_URL=$REACT_APP_OPENFISCA_BASE_URL" >> ./.env
          echo "REACT_APP_API_BASE_URL=$REACT_APP_API_BASE_URL" >> ./.env
          echo "REACT_APP_REGISTRY_API_BASE_URL=$REACT_APP_REGISTRY_API_BASE_URL" >> ./.env

          # Build all the JS files for the Drupal
          yarn run dist-build
          # Build the react pages
          yarn run build

          # Prepare dist files to versioned directory
          mkdir -p ./build/dist/$REACT_APP_BUILD_VERSION
          cp -R ./dist/* ./build/dist/$REACT_APP_BUILD_VERSION/

          # Prepare dist files to latest directory
          mkdir -p ./build/dist/latest
          cp -R ./dist/* ./build/dist/latest/

          # Copy poc acp list folder
          cp -R ./poc_acp/* ./build/dist/latest/


      - name: Deploy to Azure
        run: |
          # Use azcopy to sync files, setting the Cache-Control header
          # The --recursive flag copies subdirectories and their files
          # The --overwrite=true ensures new files replace old ones
          # The --sas "..." is your SAS URL for authentication
          # The --cache-control "max-age=0, must-revalidate" is the key part
          # azcopy copy "build/dist/latest/*" "${{ secrets.DEPLOY_SAS_URL_TESTING }}/dist/latest/" --recursive --overwrite=true --cache-control "max-age=0, must-revalidate"

          # echo "Deployment to Azure Storage 'latest' directory completed with Cache-Control: max-age=0, must-revalidate"

          # Optional: Deploy the versioned directory as well (if you want to keep historical versions with the same cache control)
          azcopy copy "build/dist/${{ env.REACT_APP_BUILD_VERSION }}" "${{ secrets.DEPLOY_SAS_URL_TESTING }}/dist/${{ env.REACT_APP_BUILD_VERSION }}" --recursive --overwrite=true --cache-control "max-age=0, must-revalidate"

          # echo "Deployment to Azure Storage versioned directory completed with Cache-Control: max-age=0, must-revalidate"
